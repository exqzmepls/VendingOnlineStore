@using VendingOnlineStore.Models.Order
@model OrderDetailsViewModel

@{
    ViewData["Title"] = "Order";
}

<div class="d-flex justify-content-start align-items-center">
    <h1 class="fs-2 pe-4">Order #@Model.Id</h1>
    @switch (Model.Status)
    {
        case OrderStatus.WaitingPayment:
            <span class="badge bg-warning fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        case OrderStatus.WaitingReceiving:
            <span class="badge bg-primary fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        case OrderStatus.PaymentOverdue:
            <span class="badge bg-secondary fs-4fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        case OrderStatus.Received:
            <span class="badge bg-success fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        case OrderStatus.ReceivingOverdue:
            <span class="badge bg-danger fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        default:
            throw new ArgumentOutOfRangeException();
    }
</div>

<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.PickupPoint.Address)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.PickupPoint.Address)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.PickupPoint.Description)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.PickupPoint.Description)
    </dd>
</dl>

<div class="d-flex justify-content-between align-items-center">
    <h2 class="fs-3">Contents</h2>
    <small>@Html.DisplayNameFor(order => order.TotalPrice): @Html.DisplayFor(order => order.TotalPrice)</small>
</div>

@foreach (var content in Model.Contents)
{
    <partial name="_Content" model="content"/>
}