@using VendingOnlineStore.Models.Order
@model OrderDetailsViewModel

@{
    ViewData["Title"] = "Order";
}

<div class="d-flex justify-content-start align-items-center">
    <h1 class="fs-2 pe-4">Order #@Model.Id</h1>
    @switch (Model.Status)
    {
        case OrderStatus.WaitingPayment:
            <span class="badge bg-warning fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        case OrderStatus.WaitingReceiving:
            <span class="badge bg-primary fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        case OrderStatus.PaymentOverdue:
            <span class="badge bg-secondary fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        case OrderStatus.Received:
            <span class="badge bg-success fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        case OrderStatus.ReceivingOverdue:
            <span class="badge bg-danger fs-5">@Html.DisplayFor(order => order.Status)</span>
            break;
        default:
            throw new ArgumentOutOfRangeException();
    }
</div>

<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.PickupPoint.Address)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.PickupPoint.Address)
    </dd>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.PickupPoint.Description)
    </dt>
    <dd class="col-sm-10">
        @Html.DisplayFor(model => model.PickupPoint.Description)
    </dd>
</dl>

@switch (Model.Status)
{
    case OrderStatus.WaitingPayment:
        <a class="btn btn-primary btn-lg" href="@Model.PaymentLink">Pay</a>
        break;
    case OrderStatus.WaitingReceiving:
        var codeLink = $"https://products.aspose.app/barcode/embed/image.Png?BarcodeType=QR&Content={Model.ReleaseCode}&TextLocation=None&Height=200&Width=200";
        <button type="button" class="btn btn-primary btn-lg" data-bs-toggle="modal" data-bs-target="#codeModal">
            Show Code
        </button>
        <div class="modal fade" id="codeModal" tabindex="-1" aria-labelledby="codeModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title" id="codeModalLabel">Code</h3>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <img class="img-fluid" alt="No Code" src="@codeLink"/>
                    </div>
                    <div class="modal-footer">
                        <a href="https://products.aspose.app/barcode/">Powered by Aspose Barcode</a>
                    </div>
                </div>
            </div>
        </div>
        break;
    case OrderStatus.PaymentOverdue:
        break;
    case OrderStatus.Received:
        break;
    case OrderStatus.ReceivingOverdue:
        break;
    default:
        throw new ArgumentOutOfRangeException();
}

<div class="d-flex justify-content-between align-items-center">
    <h2 class="fs-3">Contents</h2>
    <small>@Html.DisplayNameFor(order => order.TotalPrice): @Html.DisplayFor(order => order.TotalPrice)</small>
</div>

@foreach (var content in Model.Contents)
{
    <partial name="_Content" model="content"/>
}