@using VendingOnlineStore.Models.Order
@model VendingOnlineStore.Models.Order.OrderViewModel

<a asp-action="Details" asp-route-id="@Model.Id" class="list-group-item list-group-item-action">
    <div class="d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center">
            <h2 class="fs-3 pe-4">Order #@Model.Id</h2>
            @switch (Model.Status)
            {
                case OrderStatus.WaitingPayment:
                    <span class="badge bg-warning fs-5">@Html.DisplayFor(order => order.Status)</span>
                    break;
                case OrderStatus.WaitingReceiving:
                    <span class="badge bg-primary fs-5">@Html.DisplayFor(order => order.Status)</span>
                    break;
                case OrderStatus.PaymentOverdue:
                    <span class="badge bg-secondary fs-5">@Html.DisplayFor(order => order.Status)</span>
                    break;
                case OrderStatus.Received:
                    <span class="badge bg-success fs-5">@Html.DisplayFor(order => order.Status)</span>
                    break;
                case OrderStatus.ReceivingOverdue:
                    <span class="badge bg-danger fs-5">@Html.DisplayFor(order => order.Status)</span>
                    break;
                default:
                    throw new ArgumentOutOfRangeException();
            }
        </div>
        <small>@Html.DisplayFor(order => order.CreationDateUtc)</small>
    </div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(order => order.PickupPointAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(order => order.PickupPointAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(order => order.TotalPrice)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(order => order.TotalPrice)
        </dd>
    </dl>
</a>